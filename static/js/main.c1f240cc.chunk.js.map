{"version":3,"sources":["utils.js","components/Overlay.jsx","components/Countdown.jsx","components/EditEvent.jsx","components/App.jsx","index.js"],"names":["isValidNumberInput","e","isNaN","parseInt","key","preventDefault","parseInputAsNumber","val","hourMinuteToSeconds","h","m","Overlay","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","visible","toggleVisible","bind","assertThisInitialized","setState","prevState","_this2","overlayClass","react_default","a","createElement","className","onClick","class","props","children","Component","Countdown","diff","hour","minute","timeNow","seconds","diffText","s","Math","floor","toString","padStart","concat","secondsToHourMinuteSecond","name","title","onEditInit","id","onRemove","components_Overlay","EditEvent","isFormValid","length","isValidHour","isValidMinute","isFormEmpty","htmlFor","type","value","onChange","onInputChange","defineProperty","target","onKeyPress","disabled","onSave","onCancel","App","now","Date","getHours","getMinutes","getSeconds","events","editedEvent","uniqid","timer","handleEditEvent","handleSaveEvent","handleRemoveEvent","handleEditInit","handleEditCancel","storageEvents","JSON","parse","localStorage","getItem","intervalId","setInterval","prevProps","clearInterval","assign","find","el","map","toConsumableArray","setItem","stringify","_this3","filter","objectSpread","_this4","components_Countdown","components_EditEvent","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.c1f240cc.chunk.js","sourcesContent":["export function isValidNumberInput(e) {\r\n    if (isNaN(parseInt(e.key, 10)) === true) return e.preventDefault();\r\n    return true;\r\n}\r\n\r\nexport function parseInputAsNumber(val) {\r\n    if (val === \"\") return -1;\r\n    return parseInt(val, 10);\r\n}\r\n\r\nexport function isValidName(val) {\r\n    if (val.length > 0) return true;\r\n    return false;\r\n}\r\n\r\nexport function isValidHour(val) {\r\n    if (val >= 0 && val <= 23) return true;\r\n    return false;\r\n}\r\n\r\nexport function isValidMinute(val) {\r\n    if (val >= 0 && val <= 59) return true;\r\n    return false;\r\n}\r\n\r\nexport function hourMinuteToSeconds(h, m) {\r\n    return h* 3600 + m * 60;\r\n}\r\n\r\nexport function secondsToHourMinuteSecond(s) {\r\n    let seconds = s;\r\n    const hour = Math.floor(seconds / 3600)\r\n    .toString()\r\n    .padStart(2, 0);\r\n    seconds -= hour * 3600;\r\n    const minute = Math.floor(seconds / 60)\r\n    .toString()\r\n    .padStart(2, 0);\r\n    seconds -= minute * 60;\r\n    seconds = seconds.toString().padStart(2, 0);\r\n    return `${hour}:${minute}:${seconds}`;\r\n}","import React, { Component } from 'react';\r\nimport \"../styles/Overlay.css\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\n\r\nclass Overlay extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            visible: false\r\n        };\r\n\r\n        this.toggleVisible = this.toggleVisible.bind(this);\r\n    }\r\n\r\n    toggleVisible() {\r\n        this.setState(prevState => {\r\n            return {\r\n                visible: !prevState.visible\r\n            };\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const overlayClass =\r\n        this.state.visible === true\r\n        ? \"overlay__modal overlay__modal--visible\" \r\n        : \"overlay__modal\";\r\n\r\n        return (\r\n            <div className=\"overlay\">\r\n                <span onClick={() => this.toggleVisible()}>info</span>\r\n                <div className={overlayClass}>\r\n                    <span className=\"overlay__close\" onClick={() => this.toggleVisible()}><i class=\"close icon\"></i>close</span>\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Overlay;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { hourMinuteToSeconds, secondsToHourMinuteSecond } from \"../utils\";\r\nimport Overlay from \"./Overlay\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"../styles/Countdown.css\";\r\n\r\nconst Countdown = props => {\r\n    const eventInSeconds = hourMinuteToSeconds(\r\n        props.hour,\r\n        props.minute\r\n    );\r\n    const nowInSeconds = hourMinuteToSeconds(\r\n        props.timeNow.hour,\r\n        props.timeNow.minute\r\n    ) + props.timeNow.seconds;\r\n\r\n    const diff = eventInSeconds - nowInSeconds;\r\n    const diffText = diff > 0 ? secondsToHourMinuteSecond(diff) : \"tomorrow\";\r\n\r\n    return (\r\n        <div className=\"countdown\">\r\n            <strong>\r\n                <i class=\"clock outline icon\"></i>{props.name}</strong> - {diffText}\r\n            <div className=\"countdown__icons\">\r\n                <i className=\"icon edit\" title=\"edit\" onClick={() => props.onEditInit(props.id)} />\r\n                <i className=\"icon times\" title=\"close\" onClick={() => props.onRemove(props.id)} />\r\n            </div>\r\n            <Overlay>\r\n                <h1>\r\n                    {props.name}\r\n                </h1>\r\n                <p>\r\n                    <i class=\"clock outline icon\"></i>\r\n                    {props.hour.toString().padStart(2, 0)}:{props.minute.toString().padStart(2, 0)}\r\n                </p>\r\n            </Overlay>\r\n        </div>\r\n    );\r\n};\r\n\r\nCountdown.propTypes = {\r\n    name: PropTypes.string,\r\n    hour: PropTypes.number,\r\n    minute: PropTypes.number,\r\n    onEditInit: PropTypes.func,\r\n    timeNow: PropTypes.shape({\r\n        hour: PropTypes.number,\r\n        minute: PropTypes.number,\r\n        seconds: PropTypes.number,\r\n    }),\r\n    onRemove: PropTypes.func\r\n};\r\n\r\nexport default Countdown;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../styles/EditEvent.css\";\r\n\r\nimport {\r\n    isValidNumberInput,\r\n    parseInputAsNumber,\r\n    isValidName,\r\n    isValidHour,\r\n    isValidMinute\r\n} from \"../utils\";\r\n\r\nconst EditEvent = props => {\r\n    const isFormValid = \r\n        isValidName(props.name) &&\r\n        isValidHour(props.hour) &&\r\n        isValidMinute(props.minute);\r\n\r\n    const isFormEmpty = \r\n        props.name === \"\" && props.hour === -1 && props.minute === -1;\r\n\r\n    return (\r\n        <div className=\"edit-event\">\r\n            <div className=\"edit-event__input-group\">\r\n                <label htmlFor=\"name\">name</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    value={props.name}\r\n                    onChange={e => props.onInputChange({ [e.target.name]: e.target.value})}    \r\n                />\r\n            </div>     \r\n            <div className=\"edit-event__input-group\">\r\n                <label htmlFor=\"hour\">hour</label>\r\n                <input\r\n                    type=\"tel\"\r\n                    id=\"hour\" \r\n                    name=\"hour\"\r\n                    value={props.hour === -1 ? \"\" : props.hour}\r\n                    onKeyPress={e => isValidNumberInput(e)}\r\n                    onChange={e => props.onInputChange({ [e.target.name]: parseInputAsNumber(e.target.value)\r\n                    })\r\n                } \r\n                />\r\n            </div>   \r\n            <div className=\"edit-event__input-group\">\r\n                <label htmlFor=\"minute\">minute</label>\r\n                <input\r\n                    type=\"tel\"\r\n                    id=\"minute\"\r\n                    name=\"minute\"\r\n                    value={props.minute === -1 ? \"\" : props.minute}\r\n                    onKeyPress={e => isValidNumberInput(e)}\r\n                    onChange={e => props.onInputChange({ [e.target.name]: parseInputAsNumber(e.target.value)\r\n                    })\r\n                } \r\n                />\r\n            </div> \r\n            <button disabled={!isFormValid} onClick={() => props.onSave()}>OK</button>\r\n            <button disabled={isFormEmpty} onClick={() => props.onCancel()}>Cancel</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nEditEvent.propTypes = {\r\n    name: PropTypes.string,\r\n    hour: PropTypes.number,\r\n    minute: PropTypes.number,\r\n    onInputChange: PropTypes.func,\r\n    onSave: PropTypes.func,\r\n    onCancel: PropTypes.func\r\n}\r\n\r\nexport default EditEvent;\r\n","import React, { Component } from 'react';\r\nimport uniqid from \"uniqid\";\r\nimport \"../styles/App.css\";\r\nimport Countdown from \"./Countdown\";\r\nimport EditEvent from \"./EditEvent\";\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            now: {\r\n                hour: new Date().getHours(),\r\n                minute: new Date().getMinutes(),\r\n                seconds: new Date().getSeconds() \r\n            },\r\n            events: [],\r\n            editedEvent: {\r\n                id: uniqid(),\r\n                name: \"\",\r\n                hour: -1,\r\n                minute: -1\r\n            }\r\n        };\r\n\r\n    this.timer = this.timer.bind(this);\r\n    this.handleEditEvent = this.handleEditEvent.bind(this);\r\n    this.handleSaveEvent = this.handleSaveEvent.bind(this);\r\n    this.handleRemoveEvent = this.handleRemoveEvent.bind(this);\r\n    this.handleEditInit = this.handleEditInit.bind(this);\r\n    this.handleEditCancel = this.handleEditCancel.bind(this);\r\n    /* this.handleSortEvents = this.handleSortEvents.bind(this); */\r\n    }\r\n\r\n    timer() {\r\n        this.setState({\r\n            now: {\r\n                hour: new Date().getHours(),\r\n                minute: new Date().getMinutes(),\r\n                seconds: new Date().getSeconds() \r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        const storageEvents = JSON.parse(localStorage.getItem(\"events\")) || [];\r\n        this.setState({events: storageEvents});\r\n\r\n        const intervalId = setInterval(this.timer, 1000);\r\n        this.setState({ intervalId: intervalId });\r\n    }\r\n    \r\n    componentWillUnmount(prevProps, prevState) {\r\n        clearInterval(this.state.intervalId);\r\n    }\r\n\r\n    handleEditEvent(val) {\r\n        this.setState(prevState => {\r\n            return {\r\n                editedEvent: Object.assign(prevState.editedEvent, val)\r\n            };\r\n        });\r\n    }\r\n\r\n    handleSaveEvent() {\r\n        this.setState(prevState => {\r\n            const editedEventExist = prevState.events.find(\r\n                el => el.id === prevState.editedEvent.id\r\n            );\r\n\r\n            let updatedEvents;\r\n            if (editedEventExist) {\r\n                updatedEvents = prevState.events.map(el => {\r\n                    if (el.id === prevState.editedEvent.id)\r\n                        return prevState.editedEvent;\r\n                    else return el;  \r\n                });\r\n            } else {\r\n                updatedEvents = [...prevState.events, prevState.editedEvent];\r\n            }\r\n\r\n            return {\r\n                events: updatedEvents,\r\n                editedEvent: {\r\n                    id: uniqid(),\r\n                    name: \"\",\r\n                    hour: -1,\r\n                    minute: -1\r\n                }\r\n            };\r\n        }, () => localStorage.setItem(\"events\", JSON.stringify(this.state.events))\r\n        );\r\n    }\r\n\r\n    handleRemoveEvent(id) {\r\n        this.setState(prevState => ({\r\n            events: prevState.events.filter(el => el.id !== id)\r\n        }), () => localStorage.setItem(\"events\", JSON.stringify(this.state.events))\r\n        );\r\n    }\r\n\r\n    handleEditInit(id) {\r\n        this.setState(prevState => ({\r\n            editedEvent: { ...prevState.events.find(el => el.id === id) }\r\n        }));\r\n    }\r\n\r\n    handleEditCancel() {\r\n        this.setState({\r\n            editedEvent: {\r\n                id: uniqid(),\r\n                name: \"\",\r\n                hour: -1,\r\n                minute: -1\r\n            }\r\n        });\r\n    }\r\n\r\n   /*  handleSortEvents() {\r\n        this.state.events.sort(function(a, b) {\r\n            return a > b ? -1 : 1;\r\n    }); */\r\n\r\n    render() {\r\n        const events = this.state.events.map(el => {\r\n            return (\r\n                <Countdown\r\n                    key={el.id}\r\n                    id={el.id}\r\n                    name={el.name}\r\n                    hour={el.hour}\r\n                    minute={el.minute}\r\n                    timeNow={this.state.now}\r\n                    onRemove={id => this.handleRemoveEvent(id)}\r\n                    onEditInit={id => this.handleEditInit(id)}\r\n                />\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className=\"app\">\r\n                {events}\r\n                <EditEvent\r\n                    name={this.state.editedEvent.name}\r\n                    hour={this.state.editedEvent.hour}\r\n                    minute={this.state.editedEvent.minute}\r\n                    onInputChange={val => this.handleEditEvent(val)}\r\n                    onSave={() => this.handleSaveEvent()}\r\n                    onCancel={() => this.handleEditCancel()}\r\n                />\r\n            </div> \r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./components/App.jsx\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}